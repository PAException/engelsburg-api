swagger: "2.0"
info:
  description: "Endpoint documentation of **v2** of the engelsburg-api"
  version: "v2"
  title: "Engelsburg-API"
host: "localhost"
tags:
  - name: "substitute"
    description: "Access to substitutes and substituteMessages"
  - name: "article"
    description: "Access to published articles of homepage"
  - name: "event"
    description: "Access to events"
  - name: "info"
    description: "Access to general information"
schemes:
  - "http"
  - "https"
paths:
  /substitute:
    get:
      tags:
        - "substitute"
      summary: "Get all substitutes"
      description: "Only returns of current day and substitutes in the future"
      operationId: "getSubstitutes"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          type: "string"
          name: "ServiceToken"
          description: "To identify friendly requests"
          required: true
        - in: "header"
          type: "string"
          name: "Hash"
          description: "If you provide a hash you got from your last response the server checks if the information has changed"
          required: false
        - in: "query"
          type: "number"
          name: "Date"
          description: "Timestamp (ms)"
          required: false
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Substitute"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "401":
          description: "Unauthorized - ServiceToken is wrong"
        "304":
          description: "Not Modified - Information hasn't changend (based on sent hash)"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "404":
          description: "Not Found - The resources you requested wasn't found"
          schema:
            $ref: "#/definitions/Error404"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "400":
          description: "Inavlid param - one of your given params was invalid"
          schema:
            $ref: "#/definitions/ErrorInvalidParam"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
  /substitute/className:
    get:
      tags:
        - "substitute"
      summary: "Filter substitutes by className"
      description: "Only returns of current day and substitutes in the future"
      operationId: "getSubstitutesByClassName"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          type: "string"
          name: "ServiceToken"
          description: "To identify friendly requests"
          required: true
        - in: "header"
          type: "string"
          name: "Hash"
          description: "If you provide a hash you got from your last response the server checks if the information has changed"
          required: false
        - in: "body"
          name: "Body"
          schema:
            type: "object"
            properties:
              className:
                type: "string"
                example: "8c"
                description: "[*Required*]"
              date:
                type: "number"
                example: 1600509466
                description: "Timestamp (ms)"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Substitute"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "401":
          description: "Unauthorized - ServiceToken is wrong"
        "304":
          description: "Not Modified - Information hasn't changend (based on sent hash)"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "404":
          description: "Not Found - The resources you requested wasn't found"
          schema:
            $ref: "#/definitions/Error404"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "400":
          description: "Inavlid param - one of your given params was invalid"
          schema:
            $ref: "#/definitions/ErrorInvalidParam"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
  /substitute/teacher:
    get:
      tags:
        - "substitute"
      summary: "Filter substitutes by teacher"
      description: "Only returns of current day and substitutes in the future"
      operationId: "getSubstitutesByTeacher"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          type: "string"
          name: "ServiceToken"
          description: "To identify friendly requests"
          required: true
        - in: "header"
          type: "string"
          name: "Hash"
          description: "If you provide a hash you got from your last response the server checks if the information has changed"
          required: false
        - in: "body"
          name: "Body"
          schema:
            type: "object"
            properties:
              teacher:
                type: "string"
                example: "KRÄ"
                description: "[*Required*]"
              lesson:
                type: "string"
                example: "6"
              className:
                type: "string"
                example: "8c"
              date:
                type: "number"
                example: 1600509466
                description: "Timestamp (ms)"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Substitute"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "401":
          description: "Unauthorized - ServiceToken is wrong"
        "304":
          description: "Not Modified - Information hasn't changend (based on sent hash)"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "404":
          description: "Not Found - The resources you requested wasn't found"
          schema:
            $ref: "#/definitions/Error404"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "400":
          description: "Inavlid param - one of your given params was invalid"
          schema:
            $ref: "#/definitions/ErrorInvalidParam"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
  /substitute/substituteTeacher:
    get:
      tags:
        - "substitute"
      summary: "Filter substitutes by substituteTeacher"
      description: "Only returns of current day and substitutes in the future"
      operationId: "getSubstitutesBySubstituteTeacher"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          type: "string"
          name: "ServiceToken"
          description: "To identify friendly requests"
          required: true
        - in: "header"
          type: "string"
          name: "Hash"
          description: "If you provide a hash you got from your last response the server checks if the information has changed"
          required: false
        - in: "body"
          name: "Body"
          schema:
            type: "object"
            properties:
              teacher:
                type: "string"
                example: "KRÄ"
                description: "[*Required*]"
              date:
                type: "number"
                example: 1600509466
                description: "Timestamp (ms)"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Substitute"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "401":
          description: "Unauthorized - ServiceToken is wrong"
        "304":
          description: "Not Modified - Information hasn't changend (based on sent hash)"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "404":
          description: "Not Found - The resources you requested wasn't found"
          schema:
            $ref: "#/definitions/Error404"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "400":
          description: "Inavlid param - one of your given params was invalid"
          schema:
            $ref: "#/definitions/ErrorInvalidParam"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
  /substitute/message:
    get:
      tags:
        - "substitute"
      summary: "Get all substituteMessages"
      description: "Only returns of current day and substitutes in the future"
      operationId: "getSubstitutesMessages"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          type: "string"
          name: "ServiceToken"
          description: "To identify friendly requests"
          required: true
        - in: "header"
          type: "string"
          name: "Hash"
          description: "If you provide a hash you got from your last response the server checks if the information has changed"
          required: false
        - in: "query"
          type: "number"
          name: "Date"
          description: "Timestamp (ms)"
          required: false
      responses:
        "200":
          description: "OK - Successful operation"
          schema:
            $ref: "#/definitions/SubstituteMessage"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "401":
          description: "Unauthorized - ServiceToken is wrong"
        "304":
          description: "Not Modified - Information hasn't changend (based on sent hash)"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "404":
          description: "Not Found - The resources you requested wasn't found"
          schema:
            $ref: "#/definitions/Error404"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "400":
          description: "Inavlid param - one of your given params was invalid"
          schema:
            $ref: "#/definitions/ErrorInvalidParam"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
  /article:
    get:
      tags:
        - "article"
      summary: "Get published articles of homepage"
      operationId: "getArticles"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          type: "string"
          name: "Hash"
          description: "If you provide a hash you got from your last response the server checks if the information has changed"
          required: false
        - in: "query"
          type: "number"
          name: "date"
          description: "All articles after timestamp (ms) will be listed (min: 0, default: 0, so all articles will be listed)"
          required: false
        - in: "query"
          type: "number"
          name: "page"
          description: "Specify page (min: 1, default: 1)"
          required: false
        - in: "query"
          type: "number"
          name: "size"
          description: "Specify articles per page (min: 1, max: 20, default: 10)"
          required: false
      responses:
        "200":
          description: "OK - Successful operation"
          schema:
            $ref: "#/definitions/Article"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "304":
          description: "Not Modified - Information hasn't changend (based on sent hash)"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "404":
          description: "Not Found - The resources you requested wasn't found"
          schema:
            $ref: "#/definitions/Error404"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "400":
          description: "Inavlid param - one of your given params was invalid"
          schema:
            $ref: "#/definitions/ErrorInvalidParam"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
  /event:
    get:
      tags:
        - "event"
      summary: "Get current events"
      operationId: "getEvents"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          type: "string"
          name: "Hash"
          description: "If you provide a hash you got from your last response the server checks if the information has changed"
          required: false
      responses:
        "200":
          description: "OK - Successful operation"
          schema:
            $ref: "#/definitions/Event"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "304":
          description: "Not Modified - Information hasn't changend (based on sent hash)"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "404":
          description: "Not Found - The resources you requested wasn't found"
          schema:
            $ref: "#/definitions/Error404"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
  /info/classes:
    get:
      tags:
        - "info"
      summary: "Get current classes"
      operationId: "getClasses"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          type: "string"
          name: "Hash"
          description: "If you provide a hash you got from your last response the server checks if the information has changed"
          required: false
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Classes"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "304":
          description: "Not Modified - Information hasn't changend (based on sent hash)"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "404":
          description: "Not Found - The resources you requested wasn't found"
          schema:
            $ref: "#/definitions/Error404"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
  /info/teacher:
    get:
      tags:
        - "info"
      summary: "Get all teachers"
      operationId: "getTeachers"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "header"
          type: "string"
          name: "Hash"
          description: "If you provide a hash you got from your last response the server checks if the information has changed"
          required: false
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              teachers:
                type: "array"
                items:
                  $ref: "#/definitions/Teacher"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "304":
          description: "Not Modified - Information hasn't changend (based on sent hash)"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "404":
          description: "Not Found - The resources you requested wasn't found"
          schema:
            $ref: "#/definitions/Error404"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
  /info/teacher/{Abbreviation}:
    get:
      tags:
        - "info"
      summary: "Get all teachers"
      operationId: "getTeacher"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "Abbreviation"
          type: "string"
          description: "Abbreviation of teacher to identify"
          required: true
        - in: "header"
          type: "string"
          name: "Hash"
          description: "If you provide a hash you got from your last response the server checks if the information has changed"
          required: false
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Teacher"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "304":
          description: "Not Modified - Information hasn't changend (based on sent hash)"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
        "404":
          description: "Not Found - The resources you requested wasn't found"
          schema:
            $ref: "#/definitions/Error404"
          headers:
            Hash:
              type: "string"
              description: "Hash of response body - send in header of another request to see if information has changend"
definitions:
  Substitute:
    type: "object"
    properties:
      substitutes:
        type: "array"
        description: "Can be empty"
        items:
          type: "object"
          properties:
            date:
              type: "string"
              example: "2020-09-19"
              description: "Date format: yyyy-MM-dd"
            className:
              type: "string"
              example: "8c"
            lesson:
              type: "string"
              example: "6"
              description: "Can also be '8 - 9'"
            subject:
              type: "string"
              example: "M"
              description: "[*Nullable*]"
            substituteTeacher:
              type: "string"
              example: "EIC"
            teacher:
              type: "string"
              example: "KRÄ"
            type:
              type: "string"
              example: "Vertretung"
            substituteOf:
              type: "string"
              example: "Mi-2.9. / 6"
              description: "[*Nullable*]"
            room:
              type: "string"
              example: "H001"
              description: "[*Nullable*]"
            text:
              type: "string"
              example: "Aufg. den Schüler*innen bekannt"
              description: "[*Nullable*]"
  SubstituteMessage:
    type: "object"
    properties:
      substituteMessages:
        type: "array"
        description: "Can be empty"
        items:
          type: "object"
          properties:
            date:
              type: "string"
              example: "2020-09-19"
              description: "Date format: yyyy-MM-dd"
            absenceTeachers:
              type: "string"
              example: "GRB, GAR, STÖC, VOGL"
              description: "[*Nullable*]"
            absenceClasses:
              type: "string"
              example: "10c"
              description: "[*Nullable*]"
            affectedClasses:
              type: "string"
              example: "5a, 5c, 8d, 9a, E1, Q3"
              description: "[*Nullable*]"
            affectedRooms:
              type: "string"
              example: "H204, S304, R202"
              description: "[*Nullable*]"
            blockedRooms:
              type: "string"
              example: "H001, H207, S403, R204"
              description: "[*Nullable*]"
            messages:
              type: "string"
              example: "Die ... AG fällt heute aus!"
              description: "[*Nullable*]"
  Article:
    type: "object"
    properties:
      articles:
        type: "array"
        items:
          type: "object"
          properties:
            date:
              type: "number"
              example: 1602194843562
            link:
              type: "string"
              example: "https://engelsburg.smmp.de/2020/10/02/informationsveranstaltungen-zur-aufnahme-2021/"
            title:
              type: "string"
              example: "Informationsveranstaltungen zur Aufnahme 2021"
            content:
              type: "string"
              example: "<p>Liebe Eltern, liebe Interessierte an der Engelsburg,</p>\n\n\n\n<p>nun beginnt die Zeit, ..."
            mediaUrl:
              type: "string"
              example: "https://d1855q9qdxb6ev.cloudfront.net/files/2020/09/20190320-Postkarte-Schulpreis01-final1.jpg"
              description: "[*Nullable*]"
  Event:
    type: "object"
    properties:
      articles:
        type: "array"
        items:
          type: "object"
          properties:
            date:
              type: "string"
              example: "2021-07-06"
            title:
              type: "string"
              example: "Zeugnisausgabe"
  Classes:
    type: "object"
    properties:
      classes:
        type: "array"
        description: "Can be empty"
        items:
          type: "string"
          example: "5a"
  Teacher:
    type: "object"
    properties:
      abbreviation:
        type: "string"
        example: "AHE"
        description: "Abbreviation of the teacher in reference to substitutes"
      firstname:
        type: "string"
        example: "Christine"
        description: "Firstname of the teacher"
      surname:
        type: "string"
        example: "von der Ahé"
        description: "Surname of the teacher"
      gender:
        type: "string"
        example: "female"
        description: "female or male"
      mentionedPhD:
        type: "boolean"
        example: false
        description: "True if a PhD is mentioned"
      jobs:
        type: "array"
        items:
          type: "string"
          example: "Biologie"
  Error404:
    type: "object"
    properties:
      status:
        type: "number"
        example: 404
      messageKey:
        type: "string"
        example: "NOT_FOUND"
      extra:
        type: "string"
        example: "what wasn't found e.g.'substitutes'"
  ErrorInvalidParam:
    type: "object"
    properties:
      status:
        type: "number"
        example: 400
      messageKey:
        type: "string"
        example: "INVALID_PARAM"
      extra:
        type: "string"
        example: "what param was invalid and why"
